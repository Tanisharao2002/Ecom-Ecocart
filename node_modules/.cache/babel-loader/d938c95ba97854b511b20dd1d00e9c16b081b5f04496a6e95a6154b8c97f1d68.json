{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\React Projects\\\\ecocartecom\\\\src\\\\context\\\\Firebase.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, doc, setDoc, collection, getDoc } from \"firebase/firestore\";\nimport { getAuth, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword } from \"firebase/auth\"; // Added updateProfile import\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCYLx-G-mCu8K2oHUJR_27qYwPDDS75a5E\",\n  authDomain: \"ecocart-91438.firebaseapp.com\",\n  projectId: \"ecocart-91438\",\n  storageBucket: \"ecocart-91438.firebasestorage.app\",\n  messagingSenderId: \"46815022789\",\n  appId: \"1:46815022789:web:fc74d56493d2a3512ceaac\",\n  measurementId: \"G-MRYJQX7TMK\"\n};\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const firebaseAuth = getAuth(firebaseApp);\nexport const firestore = getFirestore(firebaseApp);\nexport const FirebaseContext = /*#__PURE__*/createContext(null);\nexport const useFirebase = () => {\n  _s();\n  return useContext(FirebaseContext);\n};\n_s(useFirebase, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const FirebaseProvider = props => {\n  _s2();\n  const [userData, setUserData] = useState({\n    fname: \"\",\n    lname: \"\",\n    email: \"\",\n    phone: \"\",\n    address: \"\"\n  });\n  const [productData, setProductData] = useState({\n    pname: \"\",\n    desc: \"\",\n    price: \"\",\n    stock: \"\",\n    image: \"\",\n    tags: []\n  });\n  const [loaderStatus, setLoaderStatus] = useState(true);\n  const createUser = async (email, password, fname, lname, role) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(firebaseAuth, email, password);\n      const user = userCredential.user;\n      console.log(role);\n      const userRef = collection(firestore, role === \"buyer\" ? \"buyers\" : \"suppliers\");\n      const allUsersRef = doc(collection(firestore, \"all_users\"), user.uid);\n      const userDocRef = doc(userRef, user.uid);\n      await setDoc(userDocRef, {\n        uid: user.uid,\n        email: email,\n        fname: fname,\n        lname: lname,\n        role: role\n      });\n      await setDoc(allUsersRef, {\n        uid: user.uid,\n        email: email,\n        fname: fname,\n        lname: lname,\n        role: role\n      });\n      alert(\"User created and stored successfully.\");\n    } catch (error) {\n      console.error(\"Error creating user:\", error);\n      alert(error.message);\n    }\n  };\n  const createProduct = async (pname, category, suppId, desc, price, stock, image, tags) => {\n    try {\n      // Create document references\n      console.log(pname, category, suppId, desc, price, stock, image, tags);\n      const productRef = doc(collection(firestore, \"products\")); // Generates a new ID\n      const suppProdRef = doc(collection(firestore, \"suppliers\", suppId, \"my_products\"), productRef.id // Use the same ID for supplier's subcollection\n      );\n      console.log(productRef.id);\n      const productData = {\n        productId: productRef.id,\n        name: pname,\n        desc: desc,\n        category: category,\n        price: price,\n        stock: stock,\n        suppId: suppId,\n        image: image,\n        tags: tags\n      };\n\n      // Write to the products collection\n      await setDoc(productRef, productData, {\n        merge: true\n      });\n      console.log(\"Product created in 'products' collection with ID:\", productRef.id);\n\n      // Write to the supplier's subcollection\n      await setDoc(suppProdRef, productData, {\n        merge: true\n      });\n      console.log(`Product added to supplier's collection (suppliers/${suppId}/my_products) with ID:`, productRef.id);\n      alert(\"Product added Successfully!\");\n    } catch (error) {\n      console.error(\"Error adding product:\", error);\n      alert(\"Error: \" + error.message);\n    }\n  };\n  const signInWithEmailAndPasswordUser = async (email, password) => {\n    try {\n      await signInWithEmailAndPassword(firebaseAuth, email, password);\n      console.log(\"User signed in successfully\");\n    } catch (error) {\n      console.error(\"Error signing in with email and password:\", error.message);\n    }\n  };\n  const updateUserProfile = async userData => {\n    const user = firebaseAuth.currentUser;\n    if (!user) {\n      alert(\"No user is logged in.\");\n      return;\n    }\n    const userRef = doc(firestore, userData.role === \"buyer\" ? \"buyers\" : \"suppliers\", user.uid);\n    const allUsersRef = doc(firestore, \"all_users\", user.uid);\n    try {\n      const updatedData = {\n        fname: userData.fname,\n        lname: userData.lname,\n        phone: userData.phone\n      };\n      console.log(\"1\", updatedData);\n      await setDoc(userRef, updatedData, {\n        merge: true\n      });\n      await setDoc(allUsersRef, updatedData, {\n        merge: true\n      });\n      await updateProfile(user, {\n        displayName: userData.name\n      });\n      alert(\"Profile updated successfully in all collections.\");\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n      alert(\"Error updating profile, please try again later.\");\n    }\n  };\n  const fetchUserData = async () => {\n    const user = firebaseAuth.currentUser;\n    if (user) {\n      const userRef = doc(firestore, \"all_users\", user.uid);\n      const docSnap = await getDoc(userRef);\n      if (docSnap.exists()) {\n        var _userData$fname, _userData$lname, _userData$email, _userData$phone, _userData$role, _user$uid;\n        const userData = docSnap.data();\n        setUserData({\n          fname: (_userData$fname = userData.fname) !== null && _userData$fname !== void 0 ? _userData$fname : \"\",\n          lname: (_userData$lname = userData.lname) !== null && _userData$lname !== void 0 ? _userData$lname : \"\",\n          email: (_userData$email = userData.email) !== null && _userData$email !== void 0 ? _userData$email : \"\",\n          phone: (_userData$phone = userData.phone) !== null && _userData$phone !== void 0 ? _userData$phone : \"\",\n          role: (_userData$role = userData.role) !== null && _userData$role !== void 0 ? _userData$role : \"\",\n          uid: (_user$uid = user.uid) !== null && _user$uid !== void 0 ? _user$uid : \"\"\n        });\n      } else {\n        console.warn(\"No user data found in Firestore.\");\n        setUserData({\n          fname: \"\",\n          lname: \"\",\n          email: \"\",\n          phone: \"\",\n          uid: \"\"\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    fetchUserData();\n    const timer = setTimeout(() => setLoaderStatus(false), 1500);\n    return () => clearTimeout(timer);\n  }, [firebaseAuth.currentUser]);\n  return /*#__PURE__*/_jsxDEV(FirebaseContext.Provider, {\n    value: {\n      createUser,\n      updateUserProfile,\n      userData,\n      setUserData,\n      loaderStatus,\n      createProduct,\n      signInWithEmailAndPasswordUser\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s2(FirebaseProvider, \"12GgioZUICKDiUsQTiLHnMirilc=\");\n_c = FirebaseProvider;\nvar _c;\n$RefreshReg$(_c, \"FirebaseProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","initializeApp","getFirestore","doc","setDoc","collection","getDoc","getAuth","createUserWithEmailAndPassword","updateProfile","signInWithEmailAndPassword","useCollectionData","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","firebaseAuth","firestore","FirebaseContext","useFirebase","_s","FirebaseProvider","props","_s2","userData","setUserData","fname","lname","email","phone","address","productData","setProductData","pname","desc","price","stock","image","tags","loaderStatus","setLoaderStatus","createUser","password","role","userCredential","user","console","log","userRef","allUsersRef","uid","userDocRef","alert","error","message","createProduct","category","suppId","productRef","suppProdRef","id","productId","name","merge","signInWithEmailAndPasswordUser","updateUserProfile","currentUser","updatedData","displayName","fetchUserData","docSnap","exists","_userData$fname","_userData$lname","_userData$email","_userData$phone","_userData$role","_user$uid","data","warn","timer","setTimeout","clearTimeout","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programs/React Projects/ecocartecom/src/context/Firebase.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  setDoc,\r\n  collection,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\"; // Added updateProfile import\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCYLx-G-mCu8K2oHUJR_27qYwPDDS75a5E\",\r\n  authDomain: \"ecocart-91438.firebaseapp.com\",\r\n  projectId: \"ecocart-91438\",\r\n  storageBucket: \"ecocart-91438.firebasestorage.app\",\r\n  messagingSenderId: \"46815022789\",\r\n  appId: \"1:46815022789:web:fc74d56493d2a3512ceaac\",\r\n  measurementId: \"G-MRYJQX7TMK\",\r\n};\r\n\r\nexport const firebaseApp = initializeApp(firebaseConfig);\r\nexport const firebaseAuth = getAuth(firebaseApp);\r\nexport const firestore = getFirestore(firebaseApp);\r\n\r\nexport const FirebaseContext = createContext(null);\r\n\r\nexport const useFirebase = () => useContext(FirebaseContext);\r\n\r\nexport const FirebaseProvider = (props) => {\r\n  const [userData, setUserData] = useState({\r\n    fname: \"\",\r\n    lname: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n  });\r\n\r\n  const [productData, setProductData] = useState({\r\n    pname: \"\",\r\n    desc: \"\",\r\n    price: \"\",\r\n    stock: \"\",\r\n    image: \"\",\r\n    tags: [],\r\n  });\r\n\r\n  const [loaderStatus, setLoaderStatus] = useState(true);\r\n\r\n  const createUser = async (email, password, fname, lname, role) => {\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(\r\n        firebaseAuth,\r\n        email,\r\n        password\r\n      );\r\n      const user = userCredential.user;\r\n\r\n      console.log(role);\r\n\r\n      const userRef = collection(\r\n        firestore,\r\n        role === \"buyer\" ? \"buyers\" : \"suppliers\"\r\n      );\r\n      const allUsersRef = doc(collection(firestore, \"all_users\"), user.uid);\r\n      const userDocRef = doc(userRef, user.uid);\r\n\r\n      await setDoc(userDocRef, {\r\n        uid: user.uid,\r\n        email: email,\r\n        fname: fname,\r\n        lname: lname,\r\n        role: role,\r\n      });\r\n\r\n      await setDoc(allUsersRef, {\r\n        uid: user.uid,\r\n        email: email,\r\n        fname: fname,\r\n        lname: lname,\r\n        role: role,\r\n      });\r\n\r\n      alert(\"User created and stored successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error creating user:\", error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const createProduct = async (\r\n    pname,\r\n    category,\r\n    suppId,\r\n    desc,\r\n    price,\r\n    stock,\r\n    image,\r\n    tags\r\n  ) => {\r\n    try {\r\n      // Create document references\r\n      console.log(pname, category, suppId, desc, price, stock, image, tags);\r\n\r\n      const productRef = doc(collection(firestore, \"products\")); // Generates a new ID\r\n      const suppProdRef = doc(\r\n        collection(firestore, \"suppliers\", suppId, \"my_products\"),\r\n        productRef.id // Use the same ID for supplier's subcollection\r\n      );\r\n      console.log(productRef.id);\r\n\r\n      const productData = {\r\n        productId: productRef.id,\r\n        name: pname,\r\n        desc: desc,\r\n        category: category,\r\n        price: price,\r\n        stock: stock,\r\n        suppId: suppId,\r\n        image: image,\r\n        tags: tags,\r\n      };\r\n\r\n      // Write to the products collection\r\n      await setDoc(productRef, productData, { merge: true });\r\n      console.log(\r\n        \"Product created in 'products' collection with ID:\",\r\n        productRef.id\r\n      );\r\n\r\n      // Write to the supplier's subcollection\r\n      await setDoc(suppProdRef, productData, { merge: true });\r\n      console.log(\r\n        `Product added to supplier's collection (suppliers/${suppId}/my_products) with ID:`,\r\n        productRef.id\r\n      );\r\n\r\n      alert(\"Product added Successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding product:\", error);\r\n      alert(\"Error: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const signInWithEmailAndPasswordUser = async (email, password) => {\r\n    try {\r\n      await signInWithEmailAndPassword(firebaseAuth, email, password);\r\n      console.log(\"User signed in successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error signing in with email and password:\", error.message);\r\n    }\r\n  };\r\n\r\n  const updateUserProfile = async (userData) => {\r\n    const user = firebaseAuth.currentUser;\r\n    if (!user) {\r\n      alert(\"No user is logged in.\");\r\n      return;\r\n    }\r\n\r\n    const userRef = doc(\r\n      firestore,\r\n      userData.role === \"buyer\" ? \"buyers\" : \"suppliers\",\r\n      user.uid\r\n    );\r\n    const allUsersRef = doc(firestore, \"all_users\", user.uid);\r\n\r\n    try {\r\n      const updatedData = {\r\n        fname: userData.fname,\r\n        lname: userData.lname,\r\n        phone: userData.phone,\r\n      };\r\n      console.log(\"1\", updatedData);\r\n\r\n      await setDoc(userRef, updatedData, { merge: true });\r\n      await setDoc(allUsersRef, updatedData, { merge: true });\r\n\r\n      await updateProfile(user, {\r\n        displayName: userData.name,\r\n      });\r\n\r\n      alert(\"Profile updated successfully in all collections.\");\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n      alert(\"Error updating profile, please try again later.\");\r\n    }\r\n  };\r\n\r\n  const fetchUserData = async () => {\r\n    const user = firebaseAuth.currentUser;\r\n    if (user) {\r\n      const userRef = doc(firestore, \"all_users\", user.uid);\r\n      const docSnap = await getDoc(userRef);\r\n      if (docSnap.exists()) {\r\n        const userData = docSnap.data();\r\n        setUserData({\r\n          fname: userData.fname ?? \"\",\r\n          lname: userData.lname ?? \"\",\r\n          email: userData.email ?? \"\",\r\n          phone: userData.phone ?? \"\",\r\n          role: userData.role ?? \"\",\r\n          uid: user.uid ?? \"\",\r\n        });\r\n      } else {\r\n        console.warn(\"No user data found in Firestore.\");\r\n        setUserData({\r\n          fname: \"\",\r\n          lname: \"\",\r\n          email: \"\",\r\n          phone: \"\",\r\n          uid: \"\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n    const timer = setTimeout(() => setLoaderStatus(false), 1500);\r\n    return () => clearTimeout(timer);\r\n  }, [firebaseAuth.currentUser]);\r\n\r\n  return (\r\n    <FirebaseContext.Provider\r\n      value={{\r\n        createUser,\r\n        updateUserProfile,\r\n        userData,\r\n        setUserData,\r\n        loaderStatus,\r\n        createProduct,\r\n        signInWithEmailAndPasswordUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FirebaseContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}